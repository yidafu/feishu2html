name: Create Release

on:
  push:
    tags:
      - 'v*' # 当推送 v* 格式的标签时触发 (e.g., v1.0.0, v2.1.3)

permissions:
  contents: write # 允许创建 release 和上传文件

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Extract changelog for this version
        id: changelog
        run: |
          # 尝试从 CHANGELOG.md 提取当前版本的更新内容
          VERSION=${{ steps.get_version.outputs.version }}
          if [ -f CHANGELOG.md ]; then
            # 提取版本号对应的部分
            CONTENT=$(sed -n "/## \[${VERSION}\]/,/## \[/p" CHANGELOG.md | sed '$d')
            if [ -n "$CONTENT" ]; then
              echo "changelog<<EOF" >> $GITHUB_OUTPUT
              echo "$CONTENT" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "changelog=Release version ${VERSION}" >> $GITHUB_OUTPUT
            fi
          else
            echo "changelog=Release version ${VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}

  build-macos:
    name: Build macOS Binaries
    needs: create-release
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [macosArm64, macosX64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build ${{ matrix.arch }} Release
        run: ./gradlew link${{ matrix.arch }}ReleaseExecutable

      - name: Package binary
        run: |
          cd build/bin/${{ matrix.arch }}/releaseExecutable
          tar -czf feishu2html-${{ needs.create-release.outputs.version }}-${{ matrix.arch }}.tar.gz feishu2html.kexe
          mv feishu2html-${{ needs.create-release.outputs.version }}-${{ matrix.arch }}.tar.gz ${{ github.workspace }}/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./feishu2html-${{ needs.create-release.outputs.version }}-${{ matrix.arch }}.tar.gz
          asset_name: feishu2html-${{ needs.create-release.outputs.version }}-${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip

  build-linux:
    name: Build Linux Binary
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build Linux X64 Release
        run: ./gradlew linkLinuxX64ReleaseExecutable

      - name: Package binary
        run: |
          cd build/bin/linuxX64/releaseExecutable
          tar -czf feishu2html-${{ needs.create-release.outputs.version }}-linuxX64.tar.gz feishu2html.kexe
          mv feishu2html-${{ needs.create-release.outputs.version }}-linuxX64.tar.gz ${{ github.workspace }}/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./feishu2html-${{ needs.create-release.outputs.version }}-linuxX64.tar.gz
          asset_name: feishu2html-${{ needs.create-release.outputs.version }}-linuxX64.tar.gz
          asset_content_type: application/gzip

  build-windows:
    name: Build Windows Binary
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build Windows X64 Release
        run: ./gradlew linkMingwX64ReleaseExecutable

      - name: Package binary
        shell: bash
        run: |
          cd build/bin/mingwX64/releaseExecutable
          7z a feishu2html-${{ needs.create-release.outputs.version }}-mingwX64.zip feishu2html.exe
          mv feishu2html-${{ needs.create-release.outputs.version }}-mingwX64.zip ${{ github.workspace }}/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./feishu2html-${{ needs.create-release.outputs.version }}-mingwX64.zip
          asset_name: feishu2html-${{ needs.create-release.outputs.version }}-mingwX64.zip
          asset_content_type: application/zip

  build-jvm-jar:
    name: Build JVM JAR
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build JVM JAR
        run: ./gradlew jvmJar

      - name: Rename JAR
        run: |
          cp build/libs/feishu2html-jvm-*.jar feishu2html-${{ needs.create-release.outputs.version }}-jvm.jar

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./feishu2html-${{ needs.create-release.outputs.version }}-jvm.jar
          asset_name: feishu2html-${{ needs.create-release.outputs.version }}-jvm.jar
          asset_content_type: application/java-archive
