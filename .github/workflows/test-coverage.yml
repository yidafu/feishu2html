name: Test Coverage

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests with coverage
        run: ./gradlew jvmTest jacocoTestReport --no-daemon

      - name: Generate coverage summary
        id: coverage
        run: |
          COVERAGE=$(grep -oP '<tfoot><tr><td>Total</td><td class="bar">[0-9,]+ of [0-9,]+</td><td class="ctr2">\K[0-9]+' build/reports/jacoco/jacocoTestReport/html/index.html || echo "0")
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const coverage = '${{ steps.coverage.outputs.coverage }}';
            const comment = `## ðŸ“Š Test Coverage Report

            - **Overall Coverage**: ${coverage}%
            - **Tests**: All passing âœ…

            [View Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: comment
            });

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: build/reports/jacoco/jacocoTestReport/html/

      - name: Check coverage threshold
        run: |
          COVERAGE=$(grep -oP '<tfoot><tr><td>Total</td><td class="bar">[0-9,]+ of [0-9,]+</td><td class="ctr2">\K[0-9]+' build/reports/jacoco/jacocoTestReport/html/index.html)
          echo "Current coverage: $COVERAGE%"
          if [ "$COVERAGE" -lt 65 ]; then
            echo "::error::Coverage $COVERAGE% is below threshold (65%)"
            exit 1
          fi
          echo "::notice::Coverage $COVERAGE% meets threshold âœ…"

